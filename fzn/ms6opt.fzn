predicate fzn_all_different_int(array [int] of var int: x);
array [1..6] of int: X_INTRODUCED_40_ = [1,1,1,1,1,1];
var 1..36: X_INTRODUCED_0_;
var 1..36: X_INTRODUCED_1_;
var 1..36: X_INTRODUCED_2_;
var 1..36: X_INTRODUCED_3_;
var 1..36: X_INTRODUCED_4_;
var 1..36: X_INTRODUCED_5_;
var 1..36: X_INTRODUCED_6_;
var 1..36: X_INTRODUCED_7_;
var 1..36: X_INTRODUCED_8_;
var 1..36: X_INTRODUCED_9_;
var 1..36: X_INTRODUCED_10_;
var 1..36: X_INTRODUCED_11_;
var 1..36: X_INTRODUCED_12_;
var 1..36: X_INTRODUCED_13_;
var 1..36: X_INTRODUCED_14_;
var 1..36: X_INTRODUCED_15_;
var 1..36: X_INTRODUCED_16_;
var 1..36: X_INTRODUCED_17_;
var 1..36: X_INTRODUCED_18_;
var 1..36: X_INTRODUCED_19_;
var 1..36: X_INTRODUCED_20_;
var 1..36: X_INTRODUCED_21_;
var 1..36: X_INTRODUCED_22_;
var 1..36: X_INTRODUCED_23_;
var 1..36: X_INTRODUCED_24_;
var 1..36: X_INTRODUCED_25_;
var 1..36: X_INTRODUCED_26_;
var 1..36: X_INTRODUCED_27_;
var 1..36: X_INTRODUCED_28_;
var 1..36: X_INTRODUCED_29_;
var 1..36: X_INTRODUCED_30_;
var 1..36: X_INTRODUCED_31_;
var 1..36: X_INTRODUCED_32_;
var 1..36: X_INTRODUCED_33_;
var 1..36: X_INTRODUCED_34_;
var 1..36: X_INTRODUCED_35_;
var 0..1: foo;
array [1..36] of var int: square:: output_array([1..6,1..6]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_];
array [1..36] of var int: X_INTRODUCED_37_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_];
constraint fzn_all_different_int(X_INTRODUCED_37_);
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_0_,X_INTRODUCED_6_,X_INTRODUCED_12_,X_INTRODUCED_18_,X_INTRODUCED_24_,X_INTRODUCED_30_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_1_,X_INTRODUCED_7_,X_INTRODUCED_13_,X_INTRODUCED_19_,X_INTRODUCED_25_,X_INTRODUCED_31_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_2_,X_INTRODUCED_8_,X_INTRODUCED_14_,X_INTRODUCED_20_,X_INTRODUCED_26_,X_INTRODUCED_32_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_3_,X_INTRODUCED_9_,X_INTRODUCED_15_,X_INTRODUCED_21_,X_INTRODUCED_27_,X_INTRODUCED_33_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_4_,X_INTRODUCED_10_,X_INTRODUCED_16_,X_INTRODUCED_22_,X_INTRODUCED_28_,X_INTRODUCED_34_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_5_,X_INTRODUCED_11_,X_INTRODUCED_17_,X_INTRODUCED_23_,X_INTRODUCED_29_,X_INTRODUCED_35_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_0_,X_INTRODUCED_7_,X_INTRODUCED_14_,X_INTRODUCED_21_,X_INTRODUCED_28_,X_INTRODUCED_35_],111):: soften;
constraint int_lin_eq(X_INTRODUCED_40_,[X_INTRODUCED_30_,X_INTRODUCED_25_,X_INTRODUCED_20_,X_INTRODUCED_15_,X_INTRODUCED_10_,X_INTRODUCED_5_],111):: soften;
solve :: relax_and_reconstruct(X_INTRODUCED_37_,60) minimize foo;
